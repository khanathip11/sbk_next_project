"use client";
import { Stack, TextField, InputAdornment, Box, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions } from "@mui/material";
import SearchIcon from "@mui/icons-material/Search";
import React, { useState } from "react";
import CategoryDatePicker from "./Category-datepicker";
import CategoryTableChild from "./Category-table-child";
import AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';
import CategoryCreate from "./Category-create";
import { Category, SubCategory } from "@/app/types/categoryType";
import { categories } from "@/app/data/categoryData";

const CategoryTable = () => {

    /**
     * ‚úÖ State ‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á Dialog (Modal) ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
     * ‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å‡πÇ‡∏´‡∏°‡∏î‡πÑ‡∏ß‡πâ‡πÉ‡∏ô object ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‡πÄ‡∏ä‡πà‡∏ô:
     *  - open: ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î modal
     *  - mode: ‡πÇ‡∏´‡∏°‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ("create", "edit", "sub")
     *  - initialData: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏•‡∏±‡∏Å
     */
    const [dialog, setDialog] = useState<{
        open: boolean;
        mode: "create" | "edit" | "sub";
        initialData?: {
            categoryName: string;
            parentCategory?: string | null;
        };
    }>({
        open: false,   // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏õ‡∏¥‡∏î modal
        mode: "create" // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏´‡∏°‡∏î‡∏Ñ‡∏∑‡∏≠ "create"
    });

    const [deleteTarget, setDeleteTarget] = useState<{ name: string; parent?: string | null } | null>(null)

    /** 
     * ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î modal ‡∏ó‡∏∏‡∏Å‡∏Å‡∏£‡∏ì‡∏µ 
     * ‡πÉ‡∏ä‡πâ‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏´‡∏°‡∏î (create, edit, sub)
     * ‡∏ó‡∏≥‡πÇ‡∏î‡∏¢ set ‡∏Ñ‡πà‡∏≤ open ‡πÄ‡∏õ‡πá‡∏ô false 
     */
    const handleCloseDialog = () =>
        setDialog((prev) => ({ ...prev, open: false }));

    /**
     * ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å"
     * ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà" ‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤
     * ‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î dialog ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏õ‡πá‡∏ô "create"
     */
    const handleOpenCreate = () =>
        setDialog({ open: true, mode: "create" });

    /**
     * ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà"
     * @param category  ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç (‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏•‡∏±‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡πà‡∏≠‡∏¢)
     * @param parent    ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏•‡∏±‡∏Å (‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢)
     * 
     * ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô:
     * 1. ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ‡πÉ‡∏ô dialog.initialData
     * 2. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î mode ‡πÄ‡∏õ‡πá‡∏ô "edit"
     * 3. ‡πÄ‡∏õ‡∏¥‡∏î modal
     */
    const handleOpenEdit = (category: Category | SubCategory, parent?: Category) => {
        setDialog({
            open: true,
            mode: "edit",
            initialData: {
                categoryName: category.category,                // ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                parentCategory: parent ? parent.category : null, // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ parent ‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏•‡∏±‡∏Å
            },
        });
    };

    /**
     * ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢"
     * @param parent ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏¢‡πà‡∏≠‡∏¢‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ
     * 
     * ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô:
     * 1. ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏•‡∏±‡∏Å‡πÑ‡∏ß‡πâ‡πÉ‡∏ô parentCategory
     * 2. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ mode ‡πÄ‡∏õ‡πá‡∏ô "sub"
     * 3. ‡πÄ‡∏õ‡∏¥‡∏î modal
     */
    const handleOpenSub = (parent: Category) => {
        setDialog({
            open: true,
            mode: "sub",
            initialData: {
                categoryName: "",               // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠)
                parentCategory: parent.category // ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô modal
            },
        });
    };

    /**
     * ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô "‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà"
     * (‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡∏à‡∏£‡∏¥‡∏á ‡πÅ‡∏Ñ‡πà log ‡∏î‡∏π‡πÉ‡∏ô console)
     * @param category ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö
     * @param parent   ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏•‡∏±‡∏Å (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
     */
    const handleDelete = (category: Category | SubCategory, parent?: Category) => {
        setDeleteTarget({
            name: category.category,
            parent: parent?.category ?? null
        })
    };

    // ----------------------------------------------------

    return (
        <Box
            sx={{
                height: "100%",
                width: "100%",
                display: "flex",
                flexDirection: "column",
                overflow: "hidden",
                bgcolor: "#F7F7F7",
                borderRadius: 4,
                boxSizing: "border-box",
            }}
        >

            {/* ------------------------------------------------------------
                üîπ ‡∏™‡πà‡∏ß‡∏ô Header (‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤ + ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà)
            ------------------------------------------------------------ */}
            <Box
                sx={{
                    display: "flex",
                    justifyContent: "space-between",
                    alignItems: "center",
                    px: 2,
                    mb: 1,
                }}
            >
                {/* üî∏ ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏´‡∏ô‡πâ‡∏≤ */}
                <Typography
                    sx={{
                        fontSize: 24,
                        fontWeight: "bold",
                        color: "#000",
                    }}
                >
                    ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏Ç‡∏≠‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤
                </Typography>

                {/* üî∏ ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏¥‡∏î modal ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà */}
                <Button
                    variant="contained"
                    sx={{
                        ml: "auto",
                        display: "flex",
                        gap: 0.5,
                        borderRadius: 2,
                        backgroundColor: '#004D99',
                        fontSize: 10,
                    }}
                    onClick={handleOpenCreate}
                >
                    <AddCircleRoundedIcon sx={{ fontSize: 16 }} />
                    ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
                </Button>
            </Box>

            {/* ------------------------------------------------------------
                üîπ ‡∏™‡πà‡∏ß‡∏ô Filter ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
                ‡πÉ‡∏ä‡πâ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ + ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà + ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
            ------------------------------------------------------------ */}
            <Stack
                sx={{
                    display: "flex",
                    width: "100%",
                    gap: 1,
                    px: 2,
                    pb: 0,
                    pt: 1,
                    flexShrink: 0,
                    flexWrap: "nowrap",
                    overflowX: "auto",
                    "&::-webkit-scrollbar": { display: "none" },
                    scrollbarWidth: "none",
                }}
                direction="row"
                alignItems="center"
            >
                {/* üî∏ ‡∏ä‡πà‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ */}
                <TextField
                    id="complaint-search"
                    placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤"
                    variant="outlined"
                    size="small"
                    sx={{
                        minWidth: "300px",
                        width: "200px",
                        flexShrink: 0,
                        bgcolor: "#f2f2f4",
                        "& .MuiOutlinedInput-root": {
                            height: 36,
                            borderRadius: 3,
                            "& fieldset": { borderColor: "#D1D5DB" },
                            "&:hover fieldset": { borderColor: "#9CA3AF" },
                            "&.Mui-focused fieldset": { borderColor: "#1976d2" },
                        },
                    }}
                    InputProps={{
                        startAdornment: (
                            <InputAdornment position="start">
                                <SearchIcon sx={{ fontSize: 18, color: "#5f6470" }} />
                            </InputAdornment>
                        ),
                    }}
                />

                <Box flexGrow={1} />

                {/* üî∏ ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°: ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà + ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå */}
                <Box
                    sx={{
                        display: "flex",
                        alignItems: "center",
                        gap: 1,
                        flexShrink: 0,
                        flexWrap: "nowrap",
                        overflowX: "auto",
                        "&::-webkit-scrollbar": { display: "none" },
                        scrollbarWidth: "none",
                    }}
                >
                    <CategoryDatePicker />

                    <Typography sx={{ fontSize: 12 }}>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå</Typography>

                    <Typography
                        sx={{
                            height: 35,
                            border: "1px solid #D9D9D9",
                            px: 1,
                            borderRadius: 2,
                            backgroundColor: "#ffffff",
                            display: "flex",
                            alignItems: "center",
                            fontSize: 12,
                        }}
                    >
                        {categories.length}
                    </Typography>
                </Box>
            </Stack>

            {/* ------------------------------------------------------------
                üîπ ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏•‡∏±‡∏Å: ‡∏ï‡∏≤‡∏£‡∏≤‡∏á TreeView ‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
            ------------------------------------------------------------ */}
            <Box
                sx={{
                    flex: 1,
                    overflowY: "auto",
                    overflowX: "hidden",
                    p: 2,
                    "&::-webkit-scrollbar": { display: "none" },
                    scrollbarWidth: "none",
                }}
            >

                {/* ‚úÖ ‡πÉ‡∏ä‡πâ CategoryCreate ‡∏ï‡∏±‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏ó‡∏∏‡∏Å‡πÇ‡∏´‡∏°‡∏î */}
                <CategoryCreate
                    open={dialog.open}                  // ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î modal
                    handleClose={handleCloseDialog}      // ‡∏õ‡∏¥‡∏î modal
                    mode={dialog.mode}                   // ‡πÇ‡∏´‡∏°‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (create/edit/sub)
                    initialData={dialog.initialData}     // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î / ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏•‡∏±‡∏Å)
                    deleteTarget={deleteTarget}
                />

                <Dialog
                    open={!!deleteTarget}
                    onClose={() => setDeleteTarget(null)}
                    PaperProps={{
                        sx: {
                            borderRadius: 3,
                        },
                    }}
                >
                    <DialogTitle>‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö</DialogTitle>

                    <DialogContent>
                        <Typography>
                            {`‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà ${deleteTarget?.name}`}
                            {deleteTarget?.parent && ` (‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ ${deleteTarget.parent}) `} ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?
                        </Typography>
                    </DialogContent>

                    <DialogActions sx={{ px: 3, pb: 2 }}>
                        <Button
                            onClick={() => setDeleteTarget(null)}
                            color="inherit"
                            sx={{
                                borderRadius: 3,
                                border: "1px solid #F2F2F2",
                            }}>
                            ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                        </Button>

                        <Button
                            color="error"
                            variant="contained"
                            onClick={() => {
                                console.log("‡∏•‡∏ö‡∏à‡∏£‡∏¥‡∏á:", deleteTarget);
                                setDeleteTarget(null);
                            }}
                            sx={{ borderRadius: 3 }}
                        >
                            ‡∏•‡∏ö
                        </Button>
                    </DialogActions>
                </Dialog>

                {/* ‚úÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á TreeView ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î */}
                {/* ‡∏™‡πà‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô handleOpenEdit / handleOpenSub / handleDelete
                    ‡πÑ‡∏õ‡πÉ‡∏´‡πâ child ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏ï‡πà‡∏≤‡∏á ‡πÜ */}
                <CategoryTableChild
                    onEdit={handleOpenEdit}
                    onAddSub={handleOpenSub}
                    onDelete={handleDelete}
                />
            </Box>
        </Box>
    );
};

export default CategoryTable