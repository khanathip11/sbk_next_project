import React, { useEffect, useState } from "react";
import {
    Button,
    Dialog,
    DialogActions,
    DialogContent,
    DialogTitle,
    TextField,
    Typography,
} from "@mui/material";
import { Box } from "@mui/system";
import CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded';
import CloseRoundedIcon from '@mui/icons-material/CloseRounded';

/**
 * тЬЕ Interface: CategoryCreateProps
 * р╕гр╕▒р╕Ъ props р╕Ир╕▓р╕Б parent (р╣Ар╕Кр╣Ир╕Щ CategoryTable)
 * - open: р╕кр╕Цр╕▓р╕Щр╕░р╣Ар╕Ыр╕┤р╕Ф/р╕Ыр╕┤р╕Ф Dialog
 * - handleClose: р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Ыр╕┤р╕Ф Dialog
 * - mode: р╕гр╕░р╕Ър╕╕р╕зр╣Ир╕▓р╕нр╕вр╕╣р╣Ир╣Гр╕Щр╣Вр╕лр╕бр╕Ф "create" р╕лр╕гр╕╖р╕н "edit"
 * - initialData: р╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щр╕Вр╕нр╕Зр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣И (р╣Гр╕Кр╣Йр╣Ар╕Йр╕Юр╕▓р╕░р╕Хр╕нр╕Щр╣Бр╕Бр╣Йр╣Др╕В)
 */
interface CategoryCreateProps {
    open: boolean;
    handleClose: () => void;
    mode: "edit" | "create" | "sub";
    initialData?: {
        categoryName: string;
        parentCategory?: string | null;
    };
}

/**
 * ЁЯзй Component: CategoryCreate
 * р╣Гр╕Кр╣Йр╕кр╕│р╕лр╕гр╕▒р╕Ъ тАЬр╣Ар╕Юр╕┤р╣Ир╕бтАЭ р╕лр╕гр╕╖р╕н тАЬр╣Бр╕Бр╣Йр╣Др╕ВтАЭ р╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣И
 * р╣Бр╕кр╕Фр╕Зр╣Ар╕Ыр╣Зр╕Щ Dialog popup
 */
const CategoryCreate: React.FC<CategoryCreateProps> = ({
    open,
    handleClose,
    mode,
    initialData,
}) => {
    /** тЬЕ р╣Ар╕Бр╣Зр╕Ър╕Ыр╕гр╕░р╣Ар╕ар╕Чр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣И р╣Ар╕Кр╣Ир╕Щ тАЬmainтАЭ (р╕лр╕бр╕зр╕Фр╕лр╕ер╕▒р╕Б) тАФ р╣Гр╕Кр╣Йр╣Гр╕Щр╕нр╕Щр╕▓р╕Др╕Хр╕лр╕▓р╕Бр╕Хр╣Йр╕нр╕Зр╕бр╕╡р╕лр╕бр╕зр╕Фр╕вр╣Ир╕нр╕в */
    const [categoryType, setCategoryType] = useState("main");

    /** тЬЕ р╣Ар╕Бр╣Зр╕Ър╕Кр╕╖р╣Ир╕нр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣Ир╕Чр╕╡р╣Ир╕Ьр╕╣р╣Йр╣Гр╕Кр╣Йр╕Бр╕гр╕нр╕Бр╣Гр╕Щ TextField */
    const [categoryName, setCategoryName] = useState("");

    /**
     * тЬЕ р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕е (р╕Бр╕Фр╕Ыр╕╕р╣Ир╕б "р╕Ър╕▒р╕Щр╕Чр╕╢р╕Б" р╕лр╕гр╕╖р╕н "р╕нр╕▒р╕Ыр╣Ар╕Фр╕Х")
     * - р╣Бр╕вр╕Бр╕Бр╕▓р╕гр╕Чр╕│р╕Зр╕▓р╕Щр╕Хр╕▓р╕бр╣Вр╕лр╕бр╕Ф (create/edit)
     * - р╣Бр╕кр╕Фр╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Гр╕Щ console (р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Юр╕▒р╕Тр╕Щр╕▓)
     * - р╕Ыр╕┤р╕Ф modal р╕лр╕ер╕▒р╕Зр╕Ър╕▒р╕Щр╕Чр╕╢р╕Б
     */
    const handleSave = () => {
        if (mode === "create") {
            console.log("ЁЯЯв р╣Ар╕Юр╕┤р╣Ир╕бр╕лр╕бр╕зр╕Фр╕лр╕ер╕▒р╕Б:", categoryName);
        } else if (mode === "sub") {
            console.log("ЁЯЯг р╣Ар╕Юр╕┤р╣Ир╕бр╕лр╕бр╕зр╕Фр╕вр╣Ир╕нр╕в:", categoryName, "р╕ар╕▓р╕вр╣Гр╕Хр╣Й:", initialData?.parentCategory);
        } else {
            console.log("ЁЯЯб р╣Бр╕Бр╣Йр╣Др╕Вр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣И:", categoryName);
        }
        handleClose();
    };

    /**
     * тЬЕ useEffect: р╣Ар╕бр╕╖р╣Ир╕н modal р╕Цр╕╣р╕Бр╣Ар╕Ыр╕┤р╕Ф (`open === true`)
     * р╕Ир╕░р╣Вр╕лр╕ер╕Фр╕Др╣Ир╕▓р╕Ир╕▓р╕Б initialData (р╣Гр╕Щр╕Бр╕гр╕Ур╕╡р╣Вр╕лр╕бр╕Фр╣Бр╕Бр╣Йр╣Др╕В)
     */
    useEffect(() => {
        if (open) {
            setCategoryName(initialData?.categoryName || "");
        }
    }, [open, initialData]);

    // ------------------------------------------------------------
    // ЁЯзн Render р╕кр╣Ир╕зр╕Щр╕Вр╕нр╕З UI
    // ------------------------------------------------------------

    return (
        <Box>
            <Dialog
                open={open}
                // onClose={handleClose}
                maxWidth="xs"
                fullWidth
                PaperProps={{
                    sx: { borderRadius: 3, p: 0 },
                }}
            >
                {/* ЁЯФ╣ р╕кр╣Ир╕зр╕Щр╕лр╕▒р╕зр╕Вр╕нр╕З Dialog */}
                <DialogTitle sx={{ fontWeight: "bold", pb: 2.5, textAlign: 'center' }}>
                    {mode === "create"
                        ? "р╣Ар╕Юр╕┤р╣Ир╕бр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣Ир╕лр╕ер╕▒р╕Б"
                        : mode === "sub"
                            ? "р╣Ар╕Юр╕┤р╣Ир╕бр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣Ир╕вр╣Ир╕нр╕в"
                            : initialData?.parentCategory
                                ? "р╣Бр╕Бр╣Йр╣Др╕Вр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣Ир╕вр╣Ир╕нр╕в"
                                : "р╣Бр╕Бр╣Йр╣Др╕Вр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣Ир╕лр╕ер╕▒р╕Б"}
                </DialogTitle>

                {/* ЁЯФ╣ р╕кр╣Ир╕зр╕Щр╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓р╣Гр╕Щ Dialog */}
                <DialogContent
                    sx={{ display: "flex", flexDirection: "column", gap: 2, pt: 1 }}
                >
                    {/* р╣Бр╕кр╕Фр╕Зр╕Кр╕╖р╣Ир╕нр╕лр╕бр╕зр╕Фр╕лр╕ер╕▒р╕Б (р╣Ар╕Йр╕Юр╕▓р╕░р╕Хр╕нр╕Щр╣Бр╕Бр╣Йр╣Др╕Вр╕лр╕бр╕зр╕Фр╕вр╣Ир╕нр╕в) */}
                    {mode !== "create" && initialData?.parentCategory && (
                        <Typography sx={{ fontSize: 13, color: "#666" }}>
                            р╕лр╕бр╕зр╕Фр╕лр╕ер╕▒р╕Б: {initialData.parentCategory}
                        </Typography>
                    )}

                    {/* ЁЯФ╕ р╕Бр╕ер╣Ир╕нр╕Зр╣Гр╕кр╣И TextField р╕Юр╕гр╣Йр╕нр╕бр╕Юр╕╖р╣Йр╕Щр╕лр╕ер╕▒р╕Зр╣Ар╕Чр╕▓ */}
                    <Box
                        sx={{
                            backgroundColor: "#F9F9FA",
                            borderRadius: 4,
                            p: 1,
                            pb: 2,
                            border: '1px solid #F2F2F2'
                        }}
                    >
                        <Typography sx={{ py: 1, fontWeight: 100, color: '#A6A6A6', fontSize: 13 }}>
                            {mode === "create"
                                ? "р╕Кр╕╖р╣Ир╕нр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣Ир╕лр╕ер╕▒р╕Б"
                                : mode === "sub"
                                    ? "р╕Кр╕╖р╣Ир╕нр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣Ир╕вр╣Ир╕нр╕в"
                                    : "р╕Кр╕╖р╣Ир╕нр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣Ир╕Чр╕╡р╣Ир╕Ир╕░р╣Бр╕Бр╣Йр╣Др╕В"}
                        </Typography>

                        {/* ЁЯУЭ р╕Кр╣Ир╕нр╕Зр╕Бр╕гр╕нр╕Бр╕Кр╕╖р╣Ир╕нр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣И */}
                        <TextField
                            size="small"
                            label="р╕Кр╕╖р╣Ир╕нр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣И"
                            placeholder="р╕Бр╕гр╕нр╕Бр╕Кр╕╖р╣Ир╕нр╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣И"
                            fullWidth
                            value={categoryName}
                            onChange={(e) => setCategoryName(e.target.value)}
                            sx={{
                                fontSize: 13,
                                "& .MuiOutlinedInput-root": {
                                    borderRadius: 3, // тЬЕ р╕бр╕╕р╕бр╣Вр╕Др╣Йр╕Зр╕бр╕Щ
                                    backgroundColor: "#fff", // р╕Юр╕╖р╣Йр╕Щр╕лр╕ер╕▒р╕Зр╕Вр╕▓р╕з
                                    "& fieldset": {
                                        borderColor: "#D1D5DB", // р╕Вр╕нр╕Ър╕Ыр╕Бр╕Хр╕┤
                                    },
                                    "&:hover fieldset": {
                                        borderColor: "#9CA3AF", // р╕Вр╕нр╕Ър╕Хр╕нр╕Щ hover
                                    },
                                    "&.Mui-focused fieldset": {
                                        borderColor: "#1976d2", // р╕Вр╕нр╕Ър╕Хр╕нр╕Щ focus
                                    },
                                },
                            }}
                        />
                    </Box>
                </DialogContent>

                {/* ЁЯФ╣ р╕кр╣Ир╕зр╕Щр╕Ыр╕╕р╣Ир╕бр╕Фр╣Йр╕▓р╕Щр╕ер╣Ир╕▓р╕Зр╕Вр╕нр╕З Dialog */}
                <DialogActions sx={{ px: 3, pb: 2 }}>
                    {/* р╕Ыр╕╕р╣Ир╕б тАЬр╕вр╕Бр╣Ар╕ер╕┤р╕БтАЭ */}
                    <Button
                        onClick={handleClose}
                        color="inherit"
                        sx={{
                            borderRadius: 3,
                            border: "1px solid #F2F2F2",
                            display: 'flex',
                            gap: 0.5
                        }}
                    >
                        <CloseRoundedIcon sx={{ fontSize: 16 }} />
                        р╕вр╕Бр╣Ар╕ер╕┤р╕Б
                    </Button>

                    {/* р╕Ыр╕╕р╣Ир╕б тАЬр╕Ър╕▒р╕Щр╕Чр╕╢р╕БтАЭ р╕лр╕гр╕╖р╕н тАЬр╕нр╕▒р╕Ыр╣Ар╕Фр╕ХтАЭ */}
                    <Button
                        variant="contained"
                        onClick={handleSave}
                        sx={{ borderRadius: 3, display: 'flex', gap: 0.5 }}
                        disabled={!categoryName.trim()} // тЬЕ р╕Ыр╕┤р╕Фр╕Ыр╕╕р╣Ир╕бр╕Цр╣Йр╕▓р╕вр╕▒р╕Зр╣Др╕бр╣Ир╕Бр╕гр╕нр╕Бр╕Кр╕╖р╣Ир╕н
                    >
                        {/* {mode === "edit" ? "р╕нр╕▒р╕Ыр╣Ар╕Фр╕Х" : "р╕Ър╕▒р╕Щр╕Чр╕╢р╕Б"} */}
                        <CheckCircleRoundedIcon sx={{ fontSize: 16 }} />
                        р╕вр╕╖р╕Щр╕вр╕▒р╕Щ
                    </Button>
                </DialogActions>
            </Dialog>
        </Box >
    );
}

export default CategoryCreate;
