import React from 'react'
import { Stack, Typography, TextField } from "@mui/material";
import { AdapterDayjs } from "@mui/x-date-pickers/AdapterDayjs";
import { LocalizationProvider } from "@mui/x-date-pickers/LocalizationProvider";
import { DatePicker } from "@mui/x-date-pickers/DatePicker";
import dayjs, { Dayjs } from "dayjs";
import "dayjs/locale/th"; // ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ locale ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÉ‡∏´‡πâ DatePicker

const ComplaintDatePicker = () => {
    // üß† ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    const [startDate, setStartDate] = React.useState<Dayjs | null>(null);
    const [endDate, setEndDate] = React.useState<Dayjs | null>(null);

    // üß© ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô custom ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö render input ‡∏Ç‡∏≠‡∏á DatePicker
    // ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ style ‡∏Ç‡∏≠‡∏á TextField ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
    const renderInputWithDefault = (
        params: React.ComponentProps<typeof TextField>
    ) => (
        <TextField
            {...params}
            placeholder="‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" // ü™∂ ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô
            size="small"
            sx={{
                width: 140,
                "& .MuiOutlinedInput-root": {
                    backgroundColor: '#fff',
                    height: 36,
                    borderRadius: 2,
                },
                "& .MuiOutlinedInput-input": {
                    fontSize: 13,
                },
            }}
        />
    );

    return (
        // üóìÔ∏è LocalizationProvider ‡πÉ‡∏ä‡πâ AdapterDayjs ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ DatePicker ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö Dayjs
        <LocalizationProvider dateAdapter={AdapterDayjs} adapterLocale="th" >
            <Stack
                direction="row"
                spacing={0.5}
                alignItems="center"
                justifyContent="center"
            >
                {/* ---------------- ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ---------------- */}
                <DatePicker
                    label={null}
                    value={startDate}
                    onChange={(newValue) => setStartDate(newValue)} // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤ startDate ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô
                    enableAccessibleFieldDOMStructure={false} // üîí ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô warning ‡∏à‡∏≤‡∏Å MUI ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö DOM structure
                    slots={{
                        textField: renderInputWithDefault, // ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô renderInput ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á
                    }}
                />

                {/* ‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° "‡∏ñ‡∏∂‡∏á" ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà */}
                <Typography sx={{ color: '#fff', fontSize: 11 }}>‡∏ñ‡∏∂‡∏á</Typography>

                {/* ---------------- ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î ---------------- */}
                <DatePicker
                    label={null}
                    value={endDate}
                    onChange={(newValue) => setEndDate(newValue)} // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤ endDate
                    enableAccessibleFieldDOMStructure={false}
                    slots={{
                        textField: renderInputWithDefault, // ‡πÉ‡∏ä‡πâ‡∏™‡πÑ‡∏ï‡∏•‡πå input ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
                    }}
                />
            </Stack>
        </LocalizationProvider>
    );
}

export default ComplaintDatePicker;
