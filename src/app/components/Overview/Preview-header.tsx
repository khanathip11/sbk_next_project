// // ‚úÖ PreviewHeader.tsx
// import { StaticImageData } from "next/image";
// import { Box, CardMedia } from "@mui/material";
// import CloseOutlinedIcon from "@mui/icons-material/CloseOutlined";

// interface PreviewHeaderProps {
//     imageSrc: string | StaticImageData;
//     onClose: () => void;
// }

// const PreviewHeader: React.FC<PreviewHeaderProps> = ({ imageSrc, onClose }) => {
//     const imageUrl = typeof imageSrc === "string" ? imageSrc : imageSrc.src;

//     return (
//         <>
//             <Box
//                 sx={{
//                     position: "absolute",
//                     top: 8,
//                     right: 8,
//                     zIndex: 10,
//                     display: "flex",
//                     alignItems: "center",
//                     justifyContent: "center",
//                 }}
//             >
//                 <CloseOutlinedIcon
//                     onClick={onClose}
//                     sx={{
//                         fontSize: 18,
//                         color: "text.secondary",
//                         cursor: "pointer",
//                     }}
//                 />
//             </Box>

//             <CardMedia
//                 component="img"
//                 image={imageUrl}
//                 alt="Preview"
//                 sx={{ width: "100%", height: "auto", objectFit: "cover" }}
//             />
//         </>
//     );
// };

// export default PreviewHeader;


// ‚úÖ PreviewHeader.tsx
import { StaticImageData } from "next/image";
import { Box, CardMedia } from "@mui/material";
import CloseOutlinedIcon from "@mui/icons-material/CloseOutlined";

/**
 * üîπ Props ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô PreviewHeader
 * - imageSrc: ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô string ‡∏´‡∏£‡∏∑‡∏≠ StaticImageData)
 * - onClose: ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤ preview
 */
interface PreviewHeaderProps {
    imageSrc: string | StaticImageData;
    onClose: () => void;
}

/**
 * ‚úÖ Component: PreviewHeader
 * ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û header ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏Ç‡∏≠‡∏á preview panel
 * ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏° "‡∏õ‡∏¥‡∏î" (X) ‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏ö‡∏ô
 */
const PreviewHeader: React.FC<PreviewHeaderProps> = ({ imageSrc, onClose }) => {
    // üî∏ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô string ‡∏´‡∏£‡∏∑‡∏≠ StaticImageData
    const imageUrl = typeof imageSrc === "string" ? imageSrc : imageSrc.src;

    return (
        <>
            {/* üîπ ‡∏õ‡∏∏‡πà‡∏° X ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤ Preview */}
            <Box
                sx={{
                    position: "absolute",
                    top: 8,
                    right: 8,
                    zIndex: 10, // ‚úÖ ‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                }}
            >
                <CloseOutlinedIcon
                    onClick={onClose}
                    sx={{
                        fontSize: 18,
                        color: "text.secondary",
                        cursor: "pointer",
                        transition: "0.2s",
                        "&:hover": { color: "#000" }, // üî∏ ‡πÄ‡∏û‡∏¥‡πà‡∏° hover effect
                    }}
                />
            </Box>

            {/* üîπ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û */}
            <CardMedia
                component="img"
                image={imageUrl}
                alt="Preview"
                sx={{
                    width: "100%",
                    height: "auto",
                    objectFit: "cover", // ‚úÖ ‡∏õ‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏û‡πÉ‡∏´‡πâ‡∏û‡∏≠‡∏î‡∏µ‡∏Å‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏ö
                    borderRadius: "8px 8px 0 0", // ‚úÖ ‡∏°‡∏∏‡∏°‡∏ö‡∏ô‡πÇ‡∏Ñ‡πâ‡∏á‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢
                }}
            />
        </>
    );
};

export default PreviewHeader;
