// import { Box, Card, CardMedia, Typography } from '@mui/material';
// import React, { useState } from 'react'
// import { formatThaiDateTime } from '@/app/utils/formatThaiDateTime';
// import { StaticImageData } from "next/image";
// import SpokeOutlinedIcon from '@mui/icons-material/SpokeOutlined';
// import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';
// import KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';
// import VpnKeyOutlinedIcon from '@mui/icons-material/VpnKeyOutlined';
// import RecordVoiceOverOutlinedIcon from '@mui/icons-material/RecordVoiceOverOutlined';
// import FmdGoodOutlinedIcon from '@mui/icons-material/FmdGoodOutlined';
// import ScheduleIcon from '@mui/icons-material/Schedule';
// import DescriptionOutlinedIcon from '@mui/icons-material/DescriptionOutlined';
// import MapOutlinedIcon from '@mui/icons-material/MapOutlined';
// import QrCodeScannerOutlinedIcon from '@mui/icons-material/QrCodeScannerOutlined';
// import CloseOutlinedIcon from '@mui/icons-material/CloseOutlined';
// import { Collapse } from '@mui/material';
// import PreviewHeader from './Preview-header';
// import PreviewDetailItem from './Preview-detailItem';
// import PreviewIssueTimelineSection from './Preview-issue-timeline-section ';
// export interface CardItem {
//     id: number;
//     issue: string;
//     count: string;
//     status: string;
//     imageSrc: string | StaticImageData;
//     bgColor: string;
//     color: string;
//     title: string;
//     desc: string;
//     refNumber: string;
//     reporter: string;
//     location: string;
//     dateTime: string;
// }

// interface PreviewPanalProps {
//     card: CardItem;
//     onBack: () => void;
// }

// const PreviewPanal: React.FC<PreviewPanalProps> = ({ card, onBack }) => {
//     const [openDropdown, setOpenDropdown] = useState<boolean>(false);

//     return (
//         <Box sx={{ width: "100%", height: "100vh", m: 0, p: 0, position: 'relative' }}>
//             {card.imageSrc && (
//                 <PreviewHeader
//                     imageSrc={typeof card.imageSrc === 'string' ? card.imageSrc : card.imageSrc}
//                     onClose={onBack}
//                 />
//             )
//             }

//             <Card sx={{ borderRadius: 4, backgroundColor: '#ffffff', width: '100%', height: '100%', p: 1, position: 'absolute', top: '38%' }}>

//                 <Box sx={{ display: "flex", justifyContent: "center", alignItems: 'center', flexDirection: 'column', mb: 2 }}>
//                     <Typography variant="h6" sx={{ textAlign: 'center', my: 1, fontSize: 14 }}>{card.title}</Typography>
//                     <Typography fontSize={12} sx={{ bgcolor: card.bgColor, px: 1, mb: 2, borderRadius: 1, color: card.color }}>{card.status}</Typography>
//                     <hr style={{ width: '100%', color: '#EDEDED' }} />
//                 </Box>

//                 <Box sx={{ p: 1 }}>
//                     <PreviewIssueTimelineSection />
//                     {/* <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>
//                         <Box sx={{ display: 'flex', flexDirection: 'column' }}>
//                             <Box sx={{ display: 'flex', gap: 1, alignItems: 'center' }}>
//                                 <SpokeOutlinedIcon sx={{ fontSize: 16 }} />
//                                 <Typography sx={{ mb: 0, fontSize: 12 }}>‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°</Typography>
//                             </Box>
//                             <Typography color="text.secondary" sx={{ ml: `24px`, fontSize: 12 }}>
//                                 ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
//                             </Typography>
//                         </Box>
//                         {!openDropdown ? (
//                             <KeyboardArrowDownIcon
//                                 onClick={() => setOpenDropdown(true)}
//                                 sx={{ fontSize: 16, cursor: 'pointer' }}
//                             />
//                         ) : (
//                             <KeyboardArrowUpIcon
//                                 onClick={() => setOpenDropdown(false)}
//                                 sx={{ fontSize: 16, cursor: 'pointer' }}
//                             />
//                         )}
//                     </Box>

//                     <Collapse in={openDropdown} timeout="auto" unmountOnExit>
//                         <Box sx={{ pl: '24px' }}>Banana is Fruit üçå</Box>
//                     </Collapse> */}

//                     <Box sx={{ mt: 1, pl: '0' }}>
//                         <PreviewDetailItem
//                             icon={<VpnKeyOutlinedIcon sx={{ fontSize: 16 }} />}
//                             label="‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á" value={card.refNumber}
//                         />
//                         <PreviewDetailItem
//                             icon={<RecordVoiceOverOutlinedIcon sx={{ fontSize: 16 }} />}
//                             label="‡∏ú‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á" value={card.reporter}
//                         />
//                         <PreviewDetailItem
//                             icon={<FmdGoodOutlinedIcon sx={{ fontSize: 16 }} />}
//                             label="‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà" value={card.location}
//                         />
//                         <PreviewDetailItem
//                             icon={<ScheduleIcon sx={{ fontSize: 16 }} />}
//                             label="‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤" value={formatThaiDateTime(card.dateTime)}
//                         />
//                         <PreviewDetailItem
//                             icon={<DescriptionOutlinedIcon sx={{ fontSize: 16 }} />}
//                             label="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î" value={card.desc}
//                         />
//                         <PreviewDetailItem
//                             icon={<MapOutlinedIcon sx={{ fontSize: 16 }} />}
//                             label="‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà" value="Lorem ipsum dolor sit amet..."
//                         />
//                         <PreviewDetailItem
//                             icon={<QrCodeScannerOutlinedIcon sx={{ fontSize: 16 }} />}
//                             label="QR-Code" value="Lorem ipsum dolor sit amet..."
//                         />
//                     </Box>

//                 </Box>

//                 {/* <Box sx={{ width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', mt: 2 }}>
//                     <Button variant="contained" size="small" onClick={onBack}>Back</Button>
//                 </Box> */}
//             </Card>
//         </Box >
//     )
// }

// export default PreviewPanal

import { Box, Card, Typography } from '@mui/material';
import React, { useState } from 'react';
import { formatThaiDateTime } from '@/app/utils/formatThaiDateTime';
import { StaticImageData } from "next/image";

// üß© Icon
import VpnKeyOutlinedIcon from '@mui/icons-material/VpnKeyOutlined';
import RecordVoiceOverOutlinedIcon from '@mui/icons-material/RecordVoiceOverOutlined';
import FmdGoodOutlinedIcon from '@mui/icons-material/FmdGoodOutlined';
import ScheduleIcon from '@mui/icons-material/Schedule';
import DescriptionOutlinedIcon from '@mui/icons-material/DescriptionOutlined';
import MapOutlinedIcon from '@mui/icons-material/MapOutlined';
import QrCodeScannerOutlinedIcon from '@mui/icons-material/QrCodeScannerOutlined';

// üß© Component ‡∏¢‡πà‡∏≠‡∏¢
import PreviewHeader from './Preview-header';
import PreviewDetailItem from './Preview-detailItem';
import PreviewIssueTimelineSection from './Preview-issue-timeline-section ';

/**
 * üîπ Type ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πå‡∏î (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á)
 */
export interface CardItem {
    id: number;
    issue: string;
    count: string;
    status: string;
    imageSrc: string | StaticImageData;
    bgColor: string;
    color: string;
    title: string;
    desc: string;
    refNumber: string;
    reporter: string;
    location: string;
    dateTime: string;
}

/**
 * üîπ Props ‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
 * - card: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏≤ preview
 * - onBack: ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤ (TaskBoard)
 */
interface PreviewPanalProps {
    card: CardItem;
    onBack: () => void;
}

/**
 * ‚úÖ Component: PreviewPanal
 * ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà: ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
 * ‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û, ‡πÄ‡∏™‡πâ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤, ‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ï‡πà‡∏≤‡∏á ‡πÜ
 */
const PreviewPanal: React.FC<PreviewPanalProps> = ({ card, onBack }) => {
    const [openDropdown, setOpenDropdown] = useState<boolean>(false); // (‡πÄ‡∏Å‡πá‡∏ö state ‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î timeline ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)

    return (
        <Box
            sx={{
                width: "100%",
                height: "100vh",
                m: 0,
                p: 0,
                position: 'relative',
            }}
        >
            {/* üîπ ‡∏™‡πà‡∏ß‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô */}
            {card.imageSrc && (
                <PreviewHeader
                    imageSrc={typeof card.imageSrc === 'string' ? card.imageSrc : card.imageSrc}
                    onClose={onBack} // ‡∏õ‡∏∏‡πà‡∏° X ‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô onBack ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö
                />
            )}

            {/* üîπ ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏´‡∏•‡∏±‡∏Å (overlay ‡∏ó‡∏±‡∏ö‡πÉ‡∏ï‡πâ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û) */}
            <Card
                sx={{
                    borderRadius: 4,
                    backgroundColor: '#ffffff',
                    width: '100%',
                    height: '100%',
                    p: 1,
                    position: 'absolute',
                    top: '38%', // ‚úÖ ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡πÉ‡∏ï‡πâ‡∏£‡∏π‡∏õ
                }}
            >
                {/* üî∏ ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á */}
                <Box sx={{ display: "flex", justifyContent: "center", alignItems: 'center', flexDirection: 'column', mb: 2 }}>
                    <Typography
                        variant="h6"
                        sx={{ textAlign: 'center', my: 1, fontSize: 14 }}
                    >
                        {card.title}
                    </Typography>

                    {/* ‡∏õ‡πâ‡∏≤‡∏¢‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ */}
                    <Typography
                        fontSize={12}
                        sx={{
                            bgcolor: card.bgColor,
                            px: 1,
                            mb: 2,
                            borderRadius: 1,
                            color: card.color,
                        }}
                    >
                        {card.status}
                    </Typography>

                    <hr style={{ width: '100%', color: '#EDEDED' }} />
                </Box>

                {/* üî∏ ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ (timeline + ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î) */}
                <Box sx={{ p: 1 }}>
                    {/* üîπ Timeline ‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° */}
                    <PreviewIssueTimelineSection />

                    {/* üîπ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° */}
                    <Box sx={{ mt: 1, pl: '0' }}>
                        <PreviewDetailItem
                            icon={<VpnKeyOutlinedIcon sx={{ fontSize: 16 }} />}
                            label="‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á"
                            value={card.refNumber}
                        />
                        <PreviewDetailItem
                            icon={<RecordVoiceOverOutlinedIcon sx={{ fontSize: 16 }} />}
                            label="‡∏ú‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á"
                            value={card.reporter}
                        />
                        <PreviewDetailItem
                            icon={<FmdGoodOutlinedIcon sx={{ fontSize: 16 }} />}
                            label="‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà"
                            value={card.location}
                        />
                        <PreviewDetailItem
                            icon={<ScheduleIcon sx={{ fontSize: 16 }} />}
                            label="‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤"
                            value={formatThaiDateTime(card.dateTime)} // ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏ó‡∏¢
                        />
                        <PreviewDetailItem
                            icon={<DescriptionOutlinedIcon sx={{ fontSize: 16 }} />}
                            label="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î"
                            value={card.desc}
                        />
                        <PreviewDetailItem
                            icon={<MapOutlinedIcon sx={{ fontSize: 16 }} />}
                            label="‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà"
                            value="‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°..."
                        />
                        <PreviewDetailItem
                            icon={<QrCodeScannerOutlinedIcon sx={{ fontSize: 16 }} />}
                            label="QR-Code"
                            value="‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°..."
                        />
                    </Box>
                </Box>
            </Card>
        </Box>
    );
};

export default PreviewPanal;
